description = 'Reactive fastdata platform based on Reactor'

ext {
  gradleVersion = '2.4'
  gradleScriptDir = "${rootProject.projectDir}/gradle"

  // Logging
  slf4jVersion = '1.7.12'
  logbackVersion = '1.1.3'

  // Testing
  mockitoVersion = '1.10.19'

  // Libraries
  reactorVersion = '2.0.4.RELEASE'
}

buildscript {
  repositories { 
    jcenter() 
  }

  dependencies {
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
  }
}

configure(allprojects) { project ->
  group = 'com.github.cyclotronx'

  apply plugin: 'java'
  apply plugin: 'optional-base'

  [compileJava, compileTestJava]*.options*.compilerArgs = [
      "-Xlint:varargs",
      "-Xlint:cast",
      "-Xlint:classfile",
      "-Xlint:dep-ann",
      "-Xlint:divzero",
      "-Xlint:empty",
      "-Xlint:finally",
      "-Xlint:overrides",
      "-Xlint:path",
      "-Xlint:processing",
      "-Xlint:static",
      "-Xlint:try",
      "-Xlint:deprecation",
      "-Xlint:unchecked",
      "-Xlint:-serial",      // intentionally disabled
      "-Xlint:-options",     // intentionally disabled
      "-Xlint:-fallthrough", // intentionally disabled
      "-Xlint:-rawtypes"     // TODO enable and fix warnings
  ]

  compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }

  sourceSets.test.resources.srcDirs = ["src/test/resources", "src/test/java"]

  configurations.all {
    exclude group: 'commons-logging', module: 'commons-logging'
  }

  project.tasks.withType(Test).all {
    systemProperty("java.awt.headless", "true")
  }

  repositories {
    mavenLocal()
    maven { url 'http://repo.spring.io/libs-snapshot' }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    jcenter()
    mavenCentral()
  }

  // dependencies that are common across all java projects
  dependencies {
    // JSR-305 annotations
    optional "com.google.code.findbugs:jsr305:3.0.0"

    // Testing
    testCompile "org.hamcrest:hamcrest-library:1.3",
        "org.mockito:mockito-all:$mockitoVersion"
    testRuntime "ch.qos.logback:logback-classic:$logbackVersion"
  }
}

if (JavaVersion.current().isJava8Compatible()) {
  allprojects {
    compileTestJava.options.compilerArgs += "-parameters"
    tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
    }
  }
}


project('cyclotronx-test') {
  description = 'Core testing components'

  dependencies {
    compile "io.projectreactor:reactor-net:$reactorVersion"
  }
}

task wrapper(type: Wrapper, description: "Create a Gradle self-download wrapper") {
  group = 'Project Setup'
  gradleVersion = "$gradleVersion"
}
